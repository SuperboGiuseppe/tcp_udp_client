import socket


def create_socket():
    '''
       Creating a new TCP socket to execute send/receive actions
       :return: Socket ready to be used by the caller module
    '''
    s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
    return s


def connection(host_address, host_port, s, keys):
    '''
    Connecting an existent socket to a specific UDP port of a server
    :param host_address: IP address of the server
    :param host_port: TCP port where the handshake takes place
    :param s: Socket to be connected to the TCP port of the server
    :param keys: Key array generated by the client to be sent to the server
    :return: Handshaking answer from the server containing the client ID, UDP port to be used for messaging and a key array to decode message received from the server
    '''
    # Encapsulating server informations (Address, port) inside a single array)
    server_address = (host_address, int(host_port))
    # Connection to the server with command line arguments
    s.connect(server_address)
    # Encapsulating message in a variable, required as we need to use encode function to send 		#our message in bytes
    message = "HELLO ENC MUL\r\n" + keys
    # Sending the message to the server
    s.sendall(message.encode())
    # Receiving the server answer in handshake variable
    handshake = s.recv(2048)
    return handshake.decode()


def close_socket(s):
    '''
    Closing a socket that is not going to be useful anymore
    :param s: Socket to be closed
    '''
    # Closing the socket connection
    s.close()
